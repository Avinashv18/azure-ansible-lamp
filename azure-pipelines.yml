# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: ubuntu-latest

steps:
- script: |
    pwd
    echo $HOME
    uname -a
    whoami
    ls -al
  displayName: 'Get system info'

- task: AzureCLI@2
  displayName: Get azure account details for ansible
  inputs:
    azureSubscription: 'AzureServiceConnection'
    addSpnToEnvironment: true
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
      echo "##vso[task.setvariable variable=ARM_SUBSCRIPTION_ID]$(az account show --query="id" -o tsv)"
      echo "##vso[task.setvariable variable=ARM_CLIENT_ID]${servicePrincipalId}"
      echo "##vso[task.setvariable variable=ARM_CLIENT_SECRET]${servicePrincipalKey}"
      echo "##vso[task.setvariable variable=ARM_TENANT_ID]${tenantId}"

- script: printenv | grep ARM_
  displayName: 'Get ARM environment variables'

- script: |
    pip install "ansible==2.9.17"
    pip install ansible[azure]
  displayName: 'Install Ansible'

- script: ansible --version
  displayName: 'Display Ansible version'

- script: |
    cat /dev/zero | ssh-keygen -q -N ""
    echo ""
    cd azenv
    #cat ~/.ssh/id_rsa.pub
    pwd
    ansible-playbook -i hosts main.yml
    ansible-playbook -i ansiblehost deploysw.yml
  displayName: 'Run infrastructure deployment and ansible intallation playbooks'
  env:
    AZURE_CLIENT_ID: $(ARM_CLIENT_ID)
    AZURE_SECRET: $(ARM_CLIENT_SECRET)
    AZURE_TENANT: $(ARM_TENANT_ID)
    AZURE_SUBSCRIPTION_ID: $(ARM_SUBSCRIPTION_ID)

- task: AzureCLI@2
  inputs:
    azureSubscription: 'AzureServiceConnection'
    scriptType: 'bash'
    scriptLocation: 'scriptPath'
    scriptPath: './azenv/sshkeyupdate.sh'

- script: |
    pwd
    cd azenv
    ssh -tt -oStrictHostKeyChecking=accept-new $(cat ansiblehost | grep "\." | cut -d' ' -f 2 | cut -d'=' -f 2)@$(cat ansiblehost | grep "\." | cut -d' ' -f 1) "cd lamp && ansible-playbook -i hosts site.yml"
    ansible-playbook -i hosts rmansvm.yml
    curl $(cat web1ip)
  displayName: 'Run lamp playbook, delete temp ansible vm '
  env:
    AZURE_CLIENT_ID: $(ARM_CLIENT_ID)
    AZURE_SECRET: $(ARM_CLIENT_SECRET)
    AZURE_TENANT: $(ARM_TENANT_ID)
    AZURE_SUBSCRIPTION_ID: $(ARM_SUBSCRIPTION_ID)
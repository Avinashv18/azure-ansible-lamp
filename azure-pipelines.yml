# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: ubuntu-latest

steps:
- script: |
    pwd
    echo $HOME
    uname -a
    whoami
    ls -al
  displayName: 'Get system info'

- task: AzureCLI@2
  displayName: Azure CLI
  inputs:
    azureSubscription: 'AzureServiceConnection'
    addSpnToEnvironment: true
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
      echo "##vso[task.setvariable variable=ARM_SUBSCRIPTION_ID]$(az account show --query="id" -o tsv)"
      echo "##vso[task.setvariable variable=ARM_CLIENT_ID]${servicePrincipalId}"
      echo "##vso[task.setvariable variable=ARM_CLIENT_SECRET]${servicePrincipalKey}"
      echo "##vso[task.setvariable variable=ARM_TENANT_ID]${tenantId}"

- script: printenv | grep ARM_
  displayName: 'Get ARM environment variables'

- script: |
    pip install "ansible==2.9.17"
    pip install ansible[azure]
  displayName: 'Install Ansible'

- script: ansible --version
  displayName: 'Display Ansible version'

- script: |
    cat /dev/zero | ssh-keygen -q -N ""
    cd azenv
    pwd
    ansible-playbook -i hosts main.yml
    ansible-playbook -i ansiblehost deploysw.yml
    #python3 enterpubkey.py
    #ansible-playbook -i lamp_simple/hosts sitewkey.yml
    #ls -al
    #ls -al $HOME
    #cat ~/.ssh/id_rsa.pub
    #cat sitewkey.yml
  displayName: 'Run Ansible playbook'
  env:
    AZURE_CLIENT_ID: $(ARM_CLIENT_ID)
    AZURE_SECRET: $(ARM_CLIENT_SECRET)
    AZURE_TENANT: $(ARM_TENANT_ID)
    AZURE_SUBSCRIPTION_ID: $(ARM_SUBSCRIPTION_ID)

#- task: AzureCLI@2
#  displayName: Azure CLI Get AnsibleVM public IP
#  inputs:
#    azureSubscription: 'AzureServiceConnection'
#    addSpnToEnvironment: true
#    scriptType: 'bash'
#    scriptLocation: 'inlineScript'
#    inlineScript: |
#      echo "##vso[task.setvariable variable=ANSIBLEVM]$(az network public-ip show -g AnsibleDevRG -n AnsibleDevPublicIP --query="ipAddress" -o tsv)"
#      echo $ANSIBLEVM
- task: AzureCLI@2
  inputs:
    azureSubscription: 'AzureServiceConnection'
    scriptType: 'bash'
    scriptLocation: 'scriptPath'
    scriptPath: './azenv/sshkeyupdate.sh'

- script: |
#    echo $ANSIBLEVM
#    echo "Waiting a minute for sshd to be ready"
#    date
#    sleep 1m
#    date
#    echo "Done wating"
    pwd
    ssh -tt -oStrictHostKeyChecking=accept-new $(cat ansiblehost | grep "\." | cut -d' ' -f 2 | cut -d'=' -f 2)@$(cat ansiblehost | grep "\." | cut -d' ' -f 1) "cd lamp && ansible-playbook -i hosts site.yml"
    ansible-playbook -i hosts rmansvm.yml
    curl $(cat web1ip)
  displayName: 'Run lamp playbook on azure web and db servers, delete temp ansible vm'
  env:
    AZURE_CLIENT_ID: $(ARM_CLIENT_ID)
    AZURE_SECRET: $(ARM_CLIENT_SECRET)
    AZURE_TENANT: $(ARM_TENANT_ID)
    AZURE_SUBSCRIPTION_ID: $(ARM_SUBSCRIPTION_ID)